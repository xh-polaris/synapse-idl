// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package system

import (
	"fmt"
	"github.com/xh-polaris/synapse-idl/hzcli/model/base"
)

/*
系统基础服务API
*/
type SendVerifyCodeReq struct {
	AuthType string `thrift:"authType,1" form:"authType" json:"authType" query:"authType"`
	AuthId   string `thrift:"authId,2" form:"authId" json:"authId" query:"authId"`
	// 过期时间, 秒级时间戳, 最长24小时
	Expire int64 `thrift:"expire,3" form:"expire" json:"expire" query:"expire"`
	// 发验证码的原因, 需提前配置
	Cause string    `thrift:"cause,4" form:"cause" json:"cause" query:"cause"`
	App   *base.App `thrift:"app,255" form:"app" json:"app" query:"app"`
}

func NewSendVerifyCodeReq() *SendVerifyCodeReq {
	return &SendVerifyCodeReq{}
}

func (p *SendVerifyCodeReq) InitDefault() {
}

func (p *SendVerifyCodeReq) GetAuthType() (v string) {
	return p.AuthType
}

func (p *SendVerifyCodeReq) GetAuthId() (v string) {
	return p.AuthId
}

func (p *SendVerifyCodeReq) GetExpire() (v int64) {
	return p.Expire
}

func (p *SendVerifyCodeReq) GetCause() (v string) {
	return p.Cause
}

var SendVerifyCodeReq_App_DEFAULT *base.App

func (p *SendVerifyCodeReq) GetApp() (v *base.App) {
	if !p.IsSetApp() {
		return SendVerifyCodeReq_App_DEFAULT
	}
	return p.App
}

func (p *SendVerifyCodeReq) IsSetApp() bool {
	return p.App != nil
}

func (p *SendVerifyCodeReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SendVerifyCodeReq(%+v)", *p)
}

type SendVerifyCodeResp struct {
	Resp *base.Response `thrift:"resp,1" form:"resp" json:"resp" query:"resp"`
}

func NewSendVerifyCodeResp() *SendVerifyCodeResp {
	return &SendVerifyCodeResp{}
}

func (p *SendVerifyCodeResp) InitDefault() {
}

var SendVerifyCodeResp_Resp_DEFAULT *base.Response

func (p *SendVerifyCodeResp) GetResp() (v *base.Response) {
	if !p.IsSetResp() {
		return SendVerifyCodeResp_Resp_DEFAULT
	}
	return p.Resp
}

func (p *SendVerifyCodeResp) IsSetResp() bool {
	return p.Resp != nil
}

func (p *SendVerifyCodeResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SendVerifyCodeResp(%+v)", *p)
}

type CheckVerifyCodeReq struct {
	AuthType string `thrift:"authType,1" form:"authType" json:"authType" query:"authType"`
	AuthId   string `thrift:"authId,2" form:"authId" json:"authId" query:"authId"`
	// 发验证码的原因, 需提前配置
	Cause  string    `thrift:"cause,3" form:"cause" json:"cause" query:"cause"`
	Verify string    `thrift:"verify,4" form:"verify" json:"verify" query:"verify"`
	App    *base.App `thrift:"app,255" form:"app" json:"app" query:"app"`
}

func NewCheckVerifyCodeReq() *CheckVerifyCodeReq {
	return &CheckVerifyCodeReq{}
}

func (p *CheckVerifyCodeReq) InitDefault() {
}

func (p *CheckVerifyCodeReq) GetAuthType() (v string) {
	return p.AuthType
}

func (p *CheckVerifyCodeReq) GetAuthId() (v string) {
	return p.AuthId
}

func (p *CheckVerifyCodeReq) GetCause() (v string) {
	return p.Cause
}

func (p *CheckVerifyCodeReq) GetVerify() (v string) {
	return p.Verify
}

var CheckVerifyCodeReq_App_DEFAULT *base.App

func (p *CheckVerifyCodeReq) GetApp() (v *base.App) {
	if !p.IsSetApp() {
		return CheckVerifyCodeReq_App_DEFAULT
	}
	return p.App
}

func (p *CheckVerifyCodeReq) IsSetApp() bool {
	return p.App != nil
}

func (p *CheckVerifyCodeReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CheckVerifyCodeReq(%+v)", *p)
}

type CheckVerifyCodeResp struct {
	Resp   *base.Response `thrift:"resp,1" form:"resp" json:"resp" query:"resp"`
	Verify bool           `thrift:"verify,2" form:"verify" json:"verify" query:"verify"`
}

func NewCheckVerifyCodeResp() *CheckVerifyCodeResp {
	return &CheckVerifyCodeResp{}
}

func (p *CheckVerifyCodeResp) InitDefault() {
}

var CheckVerifyCodeResp_Resp_DEFAULT *base.Response

func (p *CheckVerifyCodeResp) GetResp() (v *base.Response) {
	if !p.IsSetResp() {
		return CheckVerifyCodeResp_Resp_DEFAULT
	}
	return p.Resp
}

func (p *CheckVerifyCodeResp) GetVerify() (v bool) {
	return p.Verify
}

func (p *CheckVerifyCodeResp) IsSetResp() bool {
	return p.Resp != nil
}

func (p *CheckVerifyCodeResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CheckVerifyCodeResp(%+v)", *p)
}
