// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package base

import (
	"fmt"
)

type App struct {
	Name string `thrift:"Name,1" form:"Name" json:"Name" query:"Name"`
}

func NewApp() *App {
	return &App{
		Name: "",
	}
}

func (p *App) InitDefault() {
	p.Name = ""
}

func (p *App) GetName() (v string) {
	return p.Name
}

func (p *App) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("App(%+v)", *p)
}

type Response struct {
	Code  int32             `thrift:"code,1" form:"code" json:"code" query:"code"`
	Msg   string            `thrift:"msg,2" form:"msg" json:"msg" query:"msg"`
	Extra map[string]string `thrift:"extra,3,optional" form:"extra,omitempty" json:"extra,omitempty,omitempty"`
}

func NewResponse() *Response {
	return &Response{
		Code: 0,
		Msg:  "",
	}
}

func (p *Response) InitDefault() {
	p.Code = 0
	p.Msg = ""
}

func (p *Response) GetCode() (v int32) {
	return p.Code
}

func (p *Response) GetMsg() (v string) {
	return p.Msg
}

var Response_Extra_DEFAULT map[string]string

func (p *Response) GetExtra() (v map[string]string) {
	if !p.IsSetExtra() {
		return Response_Extra_DEFAULT
	}
	return p.Extra
}

func (p *Response) IsSetExtra() bool {
	return p.Extra != nil
}

func (p *Response) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Response(%+v)", *p)
}

type Page struct {
	Page   int32  `thrift:"page,1,optional" form:"page" json:"page,omitempty" query:"page"`
	Size   int32  `thrift:"size,2,optional" form:"size" json:"size,omitempty" query:"size"`
	Cursor string `thrift:"cursor,3,optional" form:"cursor" json:"cursor,omitempty" query:"cursor"`
}

func NewPage() *Page {
	return &Page{
		Page:   1,
		Size:   10,
		Cursor: "",
	}
}

func (p *Page) InitDefault() {
	p.Page = 1
	p.Size = 10
	p.Cursor = ""
}

var Page_Page_DEFAULT int32 = 1

func (p *Page) GetPage() (v int32) {
	if !p.IsSetPage() {
		return Page_Page_DEFAULT
	}
	return p.Page
}

var Page_Size_DEFAULT int32 = 10

func (p *Page) GetSize() (v int32) {
	if !p.IsSetSize() {
		return Page_Size_DEFAULT
	}
	return p.Size
}

var Page_Cursor_DEFAULT string = ""

func (p *Page) GetCursor() (v string) {
	if !p.IsSetCursor() {
		return Page_Cursor_DEFAULT
	}
	return p.Cursor
}

func (p *Page) IsSetPage() bool {
	return p.Page != Page_Page_DEFAULT
}

func (p *Page) IsSetSize() bool {
	return p.Size != Page_Size_DEFAULT
}

func (p *Page) IsSetCursor() bool {
	return p.Cursor != Page_Cursor_DEFAULT
}

func (p *Page) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Page(%+v)", *p)
}
